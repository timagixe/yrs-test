{"version":3,"sources":["components/Employees/Employees.module.scss","components/Home/Home.module.scss","components/EmployeeCard/EmployeeCard.module.scss","components/MonthCard/MonthCard.module.scss","components/EmployeeItem/EmployeeItem.module.scss","constants/index.js","utils/groupEmployeesByAlphabet.utility.js","utils/history.utility.js","contexts/EmployeesContext.jsx","hooks/useRequest.hook.js","components/Home/logo.svg","components/Home/index.jsx","components/EmployeeItem/index.jsx","components/EmployeeCard/index.jsx","components/MonthCard/index.jsx","utils/formatDate.utility.js","components/Employees/index.jsx","components/App/index.jsx","index.js"],"names":["module","exports","alphabetEntries","monthsEntries","groupEmployeesByAlphabet","employees","grouppedEmployees","Map","forEach","emp","keyToUpdate","lastName","newValue","get","checked","push","set","history","createBrowserHistory","EmployeesContext","createContext","EmployeesProvider","children","baseUrl","pathName","useState","setEmployees","useEffect","a","axios","data","console","log","useRequest","setChecked","count","setCount","Provider","value","updateCheckedEmployees","employee","checkedCopy","Date","dob","toLocaleString","month","includes","filter","checkedEmployees","checkedEmployeesCount","Home","className","classes","home","homeHeader","src","logo","homeLogo","alt","homeLink","to","EmployeeItem","firstName","useContext","employeeItem","type","onChange","EmployeeCard","letter","employeeCard","employeeLetter","employeeList","length","map","id","MonthCard","monthName","employeesArray","blockWrapper","monthTitle","monthEmployeesList","dobString","locale","options","day","year","toLocaleDateString","Employees","employeesWrapper","employeesContent","employeesHeader","size","style","overflowY","height","Array","from","employeesBirthday","margin","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83863ed7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeesHeader\":\"Employees_employeesHeader__Xt0Uz\",\"employeesWrapper\":\"Employees_employeesWrapper__WwGOa\",\"employeesContent\":\"Employees_employeesContent__1s68y\",\"employeesBirthday\":\"Employees_employeesBirthday__jN1od\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1JeZt\",\"homeHeader\":\"Home_homeHeader__2aeTz\",\"homeLogo\":\"Home_homeLogo__C3ZpW\",\"homeLink\":\"Home_homeLink__3NkMT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeeCard\":\"EmployeeCard_employeeCard__22UPs\",\"employeeLetter\":\"EmployeeCard_employeeLetter__3Auio\",\"employeeList\":\"EmployeeCard_employeeList__3ndhK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"monthTitle\":\"MonthCard_monthTitle__b5MAb\",\"blockWrapper\":\"MonthCard_blockWrapper__1Strx\",\"monthEmployeesList\":\"MonthCard_monthEmployeesList__31Kce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"employeeItem\":\"EmployeeItem_employeeItem__3IHCB\"};","export const alphabetEntries = [\n  ['A', []],\n  ['B', []],\n  ['C', []],\n  ['D', []],\n  ['E', []],\n  ['F', []],\n  ['G', []],\n  ['H', []],\n  ['I', []],\n  ['J', []],\n  ['K', []],\n  ['L', []],\n  ['M', []],\n  ['N', []],\n  ['O', []],\n  ['P', []],\n  ['Q', []],\n  ['R', []],\n  ['S', []],\n  ['T', []],\n  ['U', []],\n  ['V', []],\n  ['W', []],\n  ['X', []],\n  ['Y', []],\n  ['Z', []],\n];\n\nexport const monthsEntries = [\n  ['January', []],\n  ['February', []],\n  ['March', []],\n  ['April', []],\n  ['May', []],\n  ['June', []],\n  ['July', []],\n  ['August', []],\n  ['September', []],\n  ['October', []],\n  ['November', []],\n  ['December', []],\n];\n\nexport const baseUrl = 'https://yalantis-react-school-api.yalantis.com';\n\nexport const pathName = 'api/task0/users';\n","import { alphabetEntries } from 'constants/index';\n\nexport const groupEmployeesByAlphabet = (employees) => {\n  const grouppedEmployees = new Map(alphabetEntries);\n\n  employees.forEach((emp) => {\n    const keyToUpdate = emp.lastName[0];\n    const newValue = grouppedEmployees.get(keyToUpdate);\n    emp.checked = false;\n    newValue.push(emp);\n    grouppedEmployees.set(keyToUpdate, newValue);\n  });\n\n  return grouppedEmployees;\n};\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","import { createContext, useState } from 'react';\n\nimport { baseUrl, monthsEntries, pathName } from '../constants';\nimport { useRequest } from 'hooks/useRequest.hook';\n\nconst EmployeesContext = createContext();\n\nconst EmployeesProvider = ({ children }) => {\n  const [data] = useRequest(baseUrl, pathName);\n  const [checked, setChecked] = useState(new Map(monthsEntries));\n  const [count, setCount] = useState(0);\n\n  const updateCheckedEmployees = (employee) => {\n    const checkedCopy = new Map(checked);\n    const keyToUpdate = new Date(employee.dob).toLocaleString('en-GB', {\n      month: 'long',\n    });\n    const newValue = checkedCopy.get(keyToUpdate);\n\n    if (!newValue.includes(employee)) {\n      newValue.push(employee);\n      setCount(count + 1);\n    } else {\n      newValue.filter((emp) => emp !== employee);\n      setCount(count - 1);\n    }\n\n    checkedCopy.set(keyToUpdate, newValue);\n\n    setChecked(checkedCopy);\n  };\n\n  return (\n    <EmployeesContext.Provider\n      value={{\n        employees: data,\n        updateCheckedEmployees,\n        checkedEmployees: checked,\n        checkedEmployeesCount: count,\n      }}\n      children={children}\n    />\n  );\n};\n\nexport { EmployeesContext, EmployeesProvider };\n","import axios from 'axios';\nimport { useState, useEffect } from 'react';\n\nimport { groupEmployeesByAlphabet } from 'utils';\n\nexport const useRequest = (baseUrl, pathName) => {\n  const [employees, setEmployees] = useState(new Map());\n\n  useEffect(() => {\n    (async function () {\n      try {\n        const { data } = await axios.get(`${baseUrl}/${pathName}`);\n        setEmployees(groupEmployeesByAlphabet(data));\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [baseUrl, pathName]);\n\n  return [employees, setEmployees];\n};\n","export default __webpack_public_path__ + \"static/media/logo.4ceaa766.svg\";","import { Link } from 'react-router-dom';\n\nimport logo from './logo.svg';\nimport classes from './Home.module.scss';\n\nexport const Home = () => (\n  <div className={classes.home}>\n    <header className={classes.homeHeader}>\n      <img src={logo} className={classes.homeLogo} alt='logo' />\n      <Link className={classes.homeLink} to='/employees'>\n        Employees\n      </Link>\n    </header>\n  </div>\n);\n","import { useContext, useState } from 'react';\n\nimport { EmployeesContext } from 'contexts/EmployeesContext';\nimport classes from './EmployeeItem.module.scss';\n\nexport const EmployeeItem = ({ employee }) => {\n  const { lastName, firstName } = employee;\n  const [checked, setChecked] = useState(false);\n  const { updateCheckedEmployees } = useContext(EmployeesContext);\n\n  return (\n    <li className={classes.employeeItem}>\n      <input\n        type='checkbox'\n        checked={checked}\n        onChange={() => {\n          updateCheckedEmployees(employee);\n          setChecked(!checked);\n        }}\n      />\n      {`${lastName} ${firstName}`}\n    </li>\n  );\n};\n","import classes from './EmployeeCard.module.scss';\nimport { EmployeeItem } from 'components/EmployeeItem';\n\nexport const EmployeeCard = ({ letter, employees }) => {\n  return (\n    <div key={letter} className={classes.employeeCard}>\n      <div className={classes.employeeLetter}>{letter}</div>\n      <div>\n        <ul className={classes.employeeList}>\n          {employees.length ? (\n            employees.map((employee) => (\n              <EmployeeItem key={employee.id} employee={employee} />\n            ))\n          ) : (\n            <li className={classes.employeeItem}> --- </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import classes from './MonthCard.module.scss';\nimport { formatDate } from 'utils';\n\nexport const MonthCard = ({ monthName, employeesArray }) => {\n  return (\n    <div key={monthName} className={classes.blockWrapper}>\n      <div className={classes.monthTitle}>{monthName}</div>\n      <ul className={classes.monthEmployeesList}>\n        {employeesArray.map(({ id, firstName, lastName, dob }) => (\n          <li key={id}>{`${firstName} ${lastName} - \n          ${formatDate(dob, 'en-GB', {\n            day: 'numeric',\n            month: 'long',\n            year: 'numeric',\n          })}\n          `}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export const formatDate = (dobString, locale, options) =>\n  new Date(dobString).toLocaleDateString(locale, options);\n","import classes from './Employees.module.scss';\nimport { EmployeesContext } from 'contexts/EmployeesContext';\nimport { useContext } from 'react';\nimport { EmployeeCard } from 'components/EmployeeCard';\nimport { MonthCard } from 'components/MonthCard';\n\nexport const Employees = () => {\n  const { employees, checkedEmployees, checkedEmployeesCount } = useContext(\n    EmployeesContext\n  );\n\n  return (\n    <>\n      <div className={classes.employeesWrapper}>\n        <div className={classes.employeesContent}>\n          <div className={classes.employeesHeader}>EMPLOYEES</div>\n          {employees.size ? (\n            <div style={{ overflowY: 'scroll', height: '100vh' }}>\n              {Array.from(employees).map(([letter]) => (\n                <EmployeeCard\n                  key={letter}\n                  letter={letter}\n                  employees={employees.get(letter)}\n                />\n              ))}\n            </div>\n          ) : (\n            <p>Loading ...</p>\n          )}\n        </div>\n        <div className={classes.employeesBirthday}>\n          <div className={classes.employeesHeader}>EMPLOYEES' BIRTHDAYS</div>\n          {checkedEmployeesCount ? (\n            <div style={{ overflowY: 'scroll', height: '100vh' }}>\n              {Array.from(checkedEmployees).map(\n                ([monthName, employeesArray]) => {\n                  return employeesArray.length ? (\n                    <MonthCard\n                      key={monthName}\n                      monthName={monthName}\n                      employeesArray={employeesArray}\n                    />\n                  ) : null;\n                }\n              )}\n            </div>\n          ) : (\n            <div style={{ margin: '10px' }}>No selected employees</div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Route, Switch, Router } from 'react-router-dom';\n\nimport { EmployeesProvider } from 'contexts/EmployeesContext';\nimport { Home } from 'components/Home/';\nimport { Employees } from 'components/Employees';\nimport { history } from 'utils';\n\nconst App = () => (\n  <Router history={history}>\n    <Switch>\n      <Route\n        exact\n        path='/employees'\n        component={() => (\n          <EmployeesProvider children={<Employees />}></EmployeesProvider>\n        )}\n      />\n      <Route exact path='/' component={Home} />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'components/App/';\nimport 'styles/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}